{"version":3,"sources":["components/Header/index.js","components/Header/Header.js","constants/index.js","actions/index.js","components/Button/Button.js","components/Button/index.js","components/Stats/index.js","components/Stats/Stats.js","components/ImageGrid/ImageGrid.js","components/ImageGrid/index.js","reducers/loadingReducer.js","reducers/imagesReducer.js","reducers/errorReducer.js","reducers/pageReducer.js","reducers/statsReducer.js","reducers/index.js","api/index.js","sagas/imageSaga.js","sagas/statsSaga.js","sagas/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","Component","IMAGES","STATS","setImages","images","type","loadImageStats","id","setImageStats","downloads","setErrorStats","Button","children","isLoading","props","disabled","defaultProps","Stats","stats","error","ImageGrid","this","loadImages","imageStats","map","image","key","Math","ceil","src","urls","small","alt","alt_description","JSON","stringify","onClick","connect","nextPage","dispatch","loadingReducer","state","action","imagesReducer","errorReducer","pageReducer","statsReducer","rootReducer","combineReducers","URL","KEY","fetchImages","page","a","fetch","response","json","data","status","Error","errors","fetchImageStats","handleImagesLoad","watchImagesLoad","getPage","select","call","put","toString","takeEvery","handleStatsRequest","watchImageSuccessForStats","i","total","take","length","fork","rootSaga","all","imageSaga","statsSaga","store","sagaMiddleware","createSagaMiddleware","createStore","compose","applyMiddleware","run","consfigureStore","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f6108adc.chunk.js","sourcesContent":["import Header from \"./Header\";\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<header>\n\t\t\t\t<div className=\"navbar navbar-dark box-shadow\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"/\"\n\t\t\t\t\t\t\tclassName=\"navbar-brand d-flex align-items-center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\twidth=\"40\"\n\t\t\t\t\t\t\t\theight=\"40\"\n\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\t\tstrokeWidth=\"2\"\n\t\t\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\t\t\t\tclassName=\"mr-2\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"></path>\n\t\t\t\t\t\t\t\t<circle cx=\"12\" cy=\"13\" r=\"4\"></circle>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t<strong>Album</strong>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t);\n\t}\n}\n\nexport default Header;\n","const IMAGES = {\n\tLOAD: \"IMAGES_LOAD\",\n\tLOAD_SUCCESS: \"IMAGES_LOAD_SUCCESS\",\n\tLOAD_FAIL: \"IMAGES_LOAD_FAIL\",\n};\n\nconst STATS = {\n\tLOAD: \"STATS_LOAD\",\n\tLOAD_SUCCESS: \"STATS_LOAD_SUCCESS\",\n\tLOAD_FAIL: \"STATS_LOAD_FAIL\",\n};\n\nexport { IMAGES, STATS };\n","import { IMAGES, STATS } from \"../constants\";\n\nconst loadImages = () => ({\n\ttype: IMAGES.LOAD,\n});\n\nconst setImages = (images) => ({\n\ttype: IMAGES.LOAD_SUCCESS,\n\timages,\n});\n\nconst setError = (error) => ({\n\ttype: IMAGES.LOAD_FAIL,\n\terror,\n});\n\nconst loadImageStats = (id) => ({\n\ttype: STATS.LOAD,\n\tid,\n});\n\nconst setImageStats = (id, downloads) => ({\n\ttype: STATS.LOAD_SUCCESS,\n\tid,\n\tdownloads,\n});\n\nconst setErrorStats = (id) => ({\n\ttype: STATS.LOAD_FAIL,\n\tid,\n});\n\nexport {\n\tloadImages,\n\tsetImages,\n\tsetError,\n\tloadImageStats,\n\tsetImageStats,\n\tsetErrorStats,\n};\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Button = ({ children, isLoading, ...props }) => {\n\treturn (\n\t\t<button\n\t\t\tclassName=\"btn btn-primary btn-lg mb-3 center center-block\"\n\t\t\tdisabled={isLoading}\n\t\t\t{...props}\n\t\t>\n\t\t\t{isLoading ? \"Loading...\" : children}\n\t\t</button>\n\t);\n};\n\nButton.defaultProps = {\n\tisLoading: false,\n};\n\nexport default Button;\n","import Button from \"./Button\";\n\nexport default Button;\n","import Stats from \"./Stats\";\n\nexport default Stats;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Stats = ({ stats }) => {\n\tif (!stats) {\n\t\treturn <span className=\"stats\">Loading...</span>;\n\t}\n\n\treturn (\n\t\t<span className=\"stats\">\n\t\t\t{stats.error && \"ðŸ¤¯ Error!\"}\n\t\t\t{stats.isLoading && \"ðŸ™„ Loading...\"}\n\t\t\t{stats.downloads != null && `ðŸ¤˜ ${stats.downloads}`}\n\t\t</span>\n\t);\n};\n\nexport default Stats;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadImages } from \"../../actions\";\nimport Button from \"../Button\";\nimport Stats from \"../Stats\";\nimport \"./style.css\";\n\nclass ImageGrid extends Component {\n\tcomponentDidMount() {\n\t\tthis.props.loadImages();\n\t}\n\n\trender() {\n\t\tconst { images, error, isLoading, loadImages, imageStats } = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"content\">\n\t\t\t\t<section className=\"grid\">\n\t\t\t\t\t{images.map((image) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={image.id}\n\t\t\t\t\t\t\t\tclassName={`item item-${Math.ceil(\n\t\t\t\t\t\t\t\t\timage.height / image.width\n\t\t\t\t\t\t\t\t)}`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Stats stats={imageStats[image.id]} />\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={image.urls.small}\n\t\t\t\t\t\t\t\t\talt={image.alt_description}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</section>\n\t\t\t\t{error && (\n\t\t\t\t\t<div className=\"error mb-5\">{JSON.stringify(error)}</div>\n\t\t\t\t)}\n\t\t\t\t<div>\n\t\t\t\t\t<Button onClick={() => !isLoading && loadImages()}>\n\t\t\t\t\t\tLoad Images\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({\n\tisLoading,\n\timages,\n\terror,\n\tnextPage,\n\timageStats,\n}) => ({\n\tisLoading,\n\timages,\n\terror,\n\tnextPage,\n\timageStats,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\tloadImages: () => dispatch(loadImages()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageGrid);\n","import ImageGrid from \"./ImageGrid\";\n\nexport default ImageGrid;\n","import { IMAGES } from \"../constants\";\n\nconst loadingReducer = (state = false, action) => {\n\tswitch (action.type) {\n\t\tcase IMAGES.LOAD:\n\t\t\treturn true;\n\n\t\tcase IMAGES.LOAD_SUCCESS:\n\t\t\treturn false;\n\n\t\tcase IMAGES.LOAD_FAIL:\n\t\t\treturn false;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default loadingReducer;\n","import { IMAGES } from \"../constants\";\n\nconst imagesReducer = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase IMAGES.LOAD_SUCCESS: {\n\t\t\treturn [...state, ...action.images];\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default imagesReducer;\n","import { IMAGES } from \"../constants\";\n\nconst errorReducer = (state = null, action) => {\n\tswitch (action.type) {\n\t\tcase IMAGES.LOAD_FAIL:\n\t\t\treturn action.error;\n\n\t\tcase IMAGES.LOAD:\n\t\tcase IMAGES.LOAD_SUCCESS:\n\t\t\treturn null;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default errorReducer;\n","import { IMAGES } from \"../constants\";\n\nconst pageReducer = (state = 1, action) => {\n\tswitch (action.type) {\n\t\tcase IMAGES.LOAD_SUCCESS:\n\t\t\treturn state + 1;\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default pageReducer;\n","import { STATS } from \"../constants\";\n\nconst statsReducer = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase STATS.LOAD: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[action.id]: {\n\t\t\t\t\tisLoading: true,\n\t\t\t\t\tdownloads: null,\n\t\t\t\t\terror: false,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tcase STATS.LOAD_SUCCESS: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[action.id]: {\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tdownloads: action.downloads,\n\t\t\t\t\terror: false,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tcase STATS.LOAD_FAIL: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[action.id]: {\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tdownloads: null,\n\t\t\t\t\terror: true,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default statsReducer;\n","import { combineReducers } from \"redux\";\n\nimport loadingReducer from \"./loadingReducer\";\nimport imagesReducer from \"./imagesReducer\";\nimport errorReducer from \"./errorReducer\";\nimport pageReducer from \"./pageReducer\";\nimport statsReducer from \"./statsReducer\";\n\nconst rootReducer = combineReducers({\n\tisLoading: loadingReducer,\n\timages: imagesReducer,\n\terror: errorReducer,\n\tnextPage: pageReducer,\n\timageStats: statsReducer,\n});\n\nexport default rootReducer;\n","const URL = \"https://api.unsplash.com/photos\";\nconst KEY = \"?client_id=WatIbCnsXxt0mAS6Y3cXgnwIrZ5uCzNfeiyjXvGxqFc\";\n\nconst fetchImages = async (page) => {\n\tconst response = await fetch(`${URL}${KEY}&per_page=4&page=${page}`);\n\tconst data = await response.json();\n\n\tif (response.status >= 400) {\n\t\tthrow new Error(data.errors);\n\t}\n\n\treturn data;\n};\n\nconst fetchImageStats = async (id) => {\n\tconst response = await fetch(`${URL}/${id}/statistics${KEY}`);\n\tconst data = await response.json();\n\n\tif (response.status >= 400) {\n\t\tthrow new Error(data.errors);\n\t}\n\n\treturn data;\n};\n\nexport { fetchImages, fetchImageStats };\n","import { takeEvery, select, call, put } from \"redux-saga/effects\";\nimport { fetchImages } from \"../api\";\nimport { IMAGES } from \"../constants\";\nimport { setImages, setError } from \"../actions\";\n\nconst getPage = (state) => state.nextPage;\n\nfunction* handleImagesLoad() {\n\ttry {\n\t\tconst page = yield select(getPage);\n\t\tconst images = yield call(fetchImages, page);\n\t\tyield put(setImages(images));\n\t} catch (error) {\n\t\tyield put(setError(error.toString()));\n\t}\n}\n\nfunction* watchImagesLoad() {\n\tyield takeEvery(IMAGES.LOAD, handleImagesLoad);\n}\n\nexport default watchImagesLoad;\n","import { call, fork, put, take } from \"redux-saga/effects\";\nimport { IMAGES } from \"../constants\";\nimport { fetchImageStats } from \"../api\";\nimport { loadImageStats, setErrorStats, setImageStats } from \"../actions\";\n\nfunction* handleStatsRequest(id) {\n\tfor (let i = 0; i < 3; i++) {\n\t\ttry {\n\t\t\tyield put(loadImageStats(id));\n\t\t\tconst stats = yield call(fetchImageStats, id);\n\t\t\tyield put(setImageStats(id, stats.downloads.total));\n\t\t\treturn true;\n\t\t} catch (e) {}\n\t}\n\n\tyield put(setErrorStats(id));\n}\n\nexport default function* watchImageSuccessForStats() {\n\twhile (true) {\n\t\tconst { images } = yield take(IMAGES.LOAD_SUCCESS);\n\n\t\tfor (let i = 0; i < images.length; i++) {\n\t\t\tyield fork(handleStatsRequest, images[i].id);\n\t\t}\n\t}\n}\n","import { all } from \"redux-saga/effects\";\n\nimport imageSaga from \"./imageSaga\";\nimport statsSaga from \"./statsSaga\";\n\nexport default function* rootSaga() {\n\tyield all([imageSaga(), statsSaga()]);\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas\";\n\nconst consfigureStore = () => {\n\tconst sagaMiddleware = createSagaMiddleware();\n\n\tconst store = createStore(\n\t\trootReducer,\n\t\tcompose(\n\t\t\tapplyMiddleware(sagaMiddleware)\n\t\t\t// window.__REDUX_DEVTOOLS_EXTENSION__ &&\n\t\t\t// \twindow.__REDUX_DEVTOOLS_EXTENSION__()\n\t\t)\n\t);\n\n\tsagaMiddleware.run(rootSaga);\n\n\treturn store;\n};\n\nexport default consfigureStore;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport ImageGrid from \"./components/ImageGrid\";\nimport { Provider } from \"react-redux\";\nimport consfigureStore from \"./store\";\n\nconst store = consfigureStore();\n\nfunction App() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<Header />\n\t\t\t<ImageGrid />\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}